{
  "active": true,
  "connections": {
    "On clicking 'execute'": {
      "main": [
        [
          {
            "node": "Globals",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GitHub": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "github_status": {
      "main": [
        [
          {
            "node": "same",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "different",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "new",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "same": {
      "main": [
        [
          {
            "node": "OneAtATime",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "different": {
      "main": [
        [
          {
            "node": "GitHub Edit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "new": {
      "main": [
        [
          {
            "node": "GitHub Create",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GitHub Edit": {
      "main": [
        [
          {
            "node": "OneAtATime",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GitHub Create": {
      "main": [
        [
          {
            "node": "OneAtATime",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OneAtATime": {
      "main": [
        [
          {
            "node": "GitHub",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Globals": {
      "main": [
        [
          {
            "node": "n8n",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Every 12 hours": {
      "main": [
        [
          {
            "node": "Globals",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "isDiffOrNew": {
      "main": [
        [
          {
            "node": "github_status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "isDiffOrNew",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "n8n": {
      "main": [
        [
          {
            "node": "OneAtATime",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2023-02-16T12:33:55.657Z",
  "id": "94",
  "name": "Utility: Git Backup",
  "nodes": [
    {
      "parameters": {},
      "id": "acadf6e6-6879-452d-a0e7-4ba1cf1d3f47",
      "name": "On clicking 'execute'",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        -525,
        635
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "resource": "file",
        "operation": "get",
        "owner": "={{$node[\"Globals\"].json[\"repo\"][\"owner\"]}}",
        "repository": "={{$node[\"Globals\"].json[\"repo\"][\"name\"]}}",
        "filePath": "={{$node[\"Globals\"].json[\"repo\"][\"path\"]}}{{$json[\"name\"]}}.json",
        "asBinaryProperty": false,
        "additionalParameters": {}
      },
      "id": "8b318d4c-2449-4c96-9686-f2f55b0b6bca",
      "name": "GitHub",
      "type": "n8n-nodes-base.github",
      "position": [
        320,
        600
      ],
      "typeVersion": 1,
      "alwaysOutputData": true,
      "credentials": {
        "githubOAuth2Api": {
          "id": "12",
          "name": "Github account"
        }
      },
      "continueOnFail": true
    },
    {
      "parameters": {
        "dataType": "string",
        "value1": "={{$json[\"github_status\"]}}",
        "rules": {
          "rules": [
            {
              "value2": "same"
            },
            {
              "value2": "different",
              "output": 1
            },
            {
              "value2": "new",
              "output": 2
            }
          ]
        }
      },
      "id": "9307721e-77fc-4c0e-8496-df3345995789",
      "name": "github_status",
      "type": "n8n-nodes-base.switch",
      "position": [
        960,
        740
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "c3b7dddb-067d-4e9c-a4f4-905ff56f2a16",
      "name": "same",
      "type": "n8n-nodes-base.noOp",
      "position": [
        1200,
        540
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "44d867e4-3c62-4a3e-9413-511eea69a871",
      "name": "different",
      "type": "n8n-nodes-base.noOp",
      "position": [
        1200,
        740
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "e37af616-d324-4e3d-a8df-b93d2c6c4d22",
      "name": "new",
      "type": "n8n-nodes-base.noOp",
      "position": [
        1200,
        920
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "resource": "file",
        "operation": "edit",
        "owner": "={{$node[\"Globals\"].json[\"repo\"][\"owner\"]}}",
        "repository": "={{$node[\"Globals\"].json[\"repo\"][\"name\"]}}",
        "filePath": "={{$node[\"Globals\"].json[\"repo\"][\"path\"]}}{{$node[\"OneAtATime\"].json[\"name\"]}}.json",
        "fileContent": "={{$node[\"isDiffOrNew\"].json[\"n8n_data_stringy\"]}}",
        "commitMessage": "=[N8N Backup] {{$node[\"OneAtATime\"].json[\"name\"]}}.json ({{$json[\"github_status\"]}})"
      },
      "id": "9b2f48db-7f51-4723-b1fe-c01ff57fef56",
      "name": "GitHub Edit",
      "type": "n8n-nodes-base.github",
      "position": [
        1380,
        740
      ],
      "typeVersion": 1,
      "credentials": {
        "githubOAuth2Api": {
          "id": "12",
          "name": "Github account"
        }
      }
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "resource": "file",
        "owner": "={{$node[\"Globals\"].json[\"repo\"][\"owner\"]}}",
        "repository": "={{$node[\"Globals\"].json[\"repo\"][\"name\"]}}",
        "filePath": "={{$node[\"Globals\"].json[\"repo\"][\"path\"]}}{{$node[\"OneAtATime\"].json[\"name\"]}}.json",
        "fileContent": "={{$node[\"isDiffOrNew\"].json[\"n8n_data_stringy\"]}}",
        "commitMessage": "=[N8N Backup] {{$node[\"OneAtATime\"].json[\"name\"]}}.json ({{$json[\"github_status\"]}})"
      },
      "id": "2339518f-a791-417a-81fe-fc1100f020a4",
      "name": "GitHub Create",
      "type": "n8n-nodes-base.github",
      "position": [
        1380,
        920
      ],
      "typeVersion": 1,
      "credentials": {
        "githubOAuth2Api": {
          "id": "12",
          "name": "Github account"
        }
      }
    },
    {
      "parameters": {
        "batchSize": 1,
        "options": {}
      },
      "id": "9df10e73-aaf5-40e2-adb2-0ec6cb7fef26",
      "name": "OneAtATime",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        100,
        760
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "repo.owner",
              "value": "btxluke"
            },
            {
              "name": "repo.name",
              "value": "node2"
            },
            {
              "name": "repo.path",
              "value": "workflows"
            }
          ]
        },
        "options": {}
      },
      "id": "cd7c34d6-0092-4ecf-b31e-858703903c39",
      "name": "Globals",
      "type": "n8n-nodes-base.set",
      "position": [
        -340,
        760
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "triggerTimes": {
          "item": [
            {
              "mode": "everyX",
              "value": 12
            }
          ]
        }
      },
      "id": "f8c47d00-156a-4184-81fe-932c7e1c94bb",
      "name": "Every 12 hours",
      "type": "n8n-nodes-base.cron",
      "position": [
        -525,
        895
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Workflow Backups\nThis workflow will automatically backup your workflows to your Github account every 12 hours.\n\n### Setup\nOpen Globals and update the values below\n**repo.owner:** This is your Github username\n**repo.name:** This is the name of your repository\n**repo.path:** This is the folder to use within the repository, If it doesn't exist it will be created.\n\nIf your username was `n8n-io` and your repository was called `n8n-backups` and you wanted the workflows to go into a `workflows` folder you would set:\n\nrepo.owner - n8n-io\nrepo.name - n8n-backups\nrepo.path - workflows",
        "height": 464.79920462713443,
        "width": 389.78906250000017
      },
      "id": "767fc19f-a889-442d-8f39-b3723dc4126a",
      "name": "Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -980,
        540
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Single Item Loop\nWe process each workflow item one at a time, We first check Github to see if a file exists then we merge the Github Data and the API item so we can check if the values match in the function node `isDiffOrNew` we then set a status of `same`, `different` or `new`",
        "height": 424.04333333333386,
        "width": 755.2349999999991
      },
      "id": "fa1259b0-c580-4746-8499-44631e9312a8",
      "name": "Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        80,
        480
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Save the data\nUsing the switch node we work out what to do based on the previous status,  If it is the same we do nothing, If it is different we update the file in Github and if it is new we create a new file. After this is done we loop back to the Split in Batches node (OneAtAtTime) to start the process again.",
        "height": 693.9283333333326,
        "width": 666.4416666666662
      },
      "id": "c29447e5-c9fd-4a7c-934e-d4041b573fa2",
      "name": "Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        920,
        420
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "jsCode": "// File Returned with Content\nif (Object.keys($input.all()[0].json).includes(\"content\")) {\n  // Get JSON Objects\n  var origWorkflow = JSON.parse(Buffer.from($input.all()[0].json.content, 'base64'));\n  var n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON Objects\n  var orderedOriginal = {}\n  var orderedActual = {}\n  \n  Object.keys(origWorkflow).sort().forEach(function(key) {\n    orderedOriginal[key] = origWorkflow[key];\n  });\n  \n  Object.keys(n8nWorkflow).sort().forEach(function(key) {\n    orderedActual[key] = n8nWorkflow[key];\n  });\n\n  // Determine Difference\n  if ( JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual) ) {\n    $input.all()[0].json.github_status = \"same\";\n    $input.all()[0].json.content_decoded = orderedOriginal;\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.content_decoded = orderedOriginal;\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n// No File Returned / New Workflow\n} else {\n  // Order JSON Object\n  var n8nWorkflow = ($input.all()[1].json);\n  var orderedActual = {}\n  Object.keys(n8nWorkflow).sort().forEach(function(key) {\n    orderedActual[key] = n8nWorkflow[key];\n  });\n  \n  // Proper Formatting\n  $input.all()[0].json.github_status = \"new\";\n  $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n}\n\n// Return Items\nreturn $input.all();"
      },
      "id": "327b2b40-9330-40d4-a7b3-b8770954a516",
      "name": "isDiffOrNew",
      "type": "n8n-nodes-base.code",
      "position": [
        720,
        740
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "4865372a-ac60-479c-b218-65a449f5ca3c",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "position": [
        540,
        740
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "url": "https://node4.biketrax.co.uk/api/v1/workflows",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "active",
              "value": "true"
            },
            {
              "name": "limit",
              "value": "100"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "accept",
              "value": "application/json"
            },
            {
              "name": "X-N8N-API-KEY",
              "value": "n8n_api_d347041926616d229093574ce3a8f398d683634f24f61f620e480ee66264ed91ef7fa187adddc491"
            }
          ]
        },
        "options": {}
      },
      "id": "e9d9e71c-3972-4891-a181-10c242a3a689",
      "name": "HTTP Request",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        -320,
        1160
      ]
    },
    {
      "parameters": {
        "filters": {}
      },
      "id": "c0165bec-a8a2-41a3-973b-dc5979a33d22",
      "name": "n8n",
      "type": "n8n-nodes-base.n8n",
      "typeVersion": 1,
      "position": [
        -120,
        760
      ],
      "credentials": {
        "n8nApi": {
          "id": "40",
          "name": "n8n account"
        }
      }
    }
  ],
  "pinData": {},
  "settings": {},
  "staticData": null,
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2023-02-16T12:36:49.000Z",
  "versionId": "961c313f-13c0-4a87-a95f-3fc81643821f"
}